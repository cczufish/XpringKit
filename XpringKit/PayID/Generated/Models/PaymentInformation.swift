//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class PaymentInformation: APIModel {

    public var addressDetailsType: String

    public var addressDetails: CryptoAddressDetails

    public var paymentPointer: String?

    public var proofOfControlSignature: String?

    public init(addressDetailsType: String, addressDetails: CryptoAddressDetails, paymentPointer: String? = nil, proofOfControlSignature: String? = nil) {
        self.addressDetailsType = addressDetailsType
        self.addressDetails = addressDetails
        self.paymentPointer = paymentPointer
        self.proofOfControlSignature = proofOfControlSignature
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        addressDetailsType = try container.decode("addressDetailsType")
        addressDetails = try container.decode("addressDetails")
        paymentPointer = try container.decodeIfPresent("paymentPointer")
        proofOfControlSignature = try container.decodeIfPresent("proof_of_control_signature")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(addressDetailsType, forKey: "addressDetailsType")
        try container.encode(addressDetails, forKey: "addressDetails")
        try container.encodeIfPresent(paymentPointer, forKey: "paymentPointer")
        try container.encodeIfPresent(proofOfControlSignature, forKey: "proof_of_control_signature")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PaymentInformation else { return false }
      guard self.addressDetailsType == object.addressDetailsType else { return false }
      guard self.addressDetails == object.addressDetails else { return false }
      guard self.paymentPointer == object.paymentPointer else { return false }
      guard self.proofOfControlSignature == object.proofOfControlSignature else { return false }
      return true
    }

    public static func == (lhs: PaymentInformation, rhs: PaymentInformation) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
